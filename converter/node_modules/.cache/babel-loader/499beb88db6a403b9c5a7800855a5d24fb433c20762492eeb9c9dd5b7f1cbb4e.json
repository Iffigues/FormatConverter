{"ast":null,"code":"var _jsxFileName = \"/home/debian/FormatConverter/converter/app/converter/src/component/serverHandler.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServerHandler = ({\n  selectedOptions,\n  files\n}) => {\n  const sendDataToServer = async () => {\n    try {\n      console.log(files);\n      const formData = new FormData();\n      selectedOptions.forEach((option, index) => {\n        formData.append(`option[${index}]`, option);\n      });\n\n      // Append files\n      files.forEach((file, index) => {\n        formData.append(`files`, file);\n      });\n\n      // Make a POST request to the server\n      const response = await fetch('http://gopiko.fr:8780/', {\n        method: 'POST',\n        body: formData\n      });\n\n      // Handle the response as needed\n      const result = await response.json();\n      console.log('Server response:', result);\n    } catch (error) {\n      console.error('Error sending data to server:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendDataToServer,\n      children: \"Send Data to Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = ServerHandler;\nexport default ServerHandler;\nvar _c;\n$RefreshReg$(_c, \"ServerHandler\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ServerHandler","selectedOptions","files","sendDataToServer","console","log","formData","FormData","forEach","option","index","append","file","response","fetch","method","body","result","json","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/debian/FormatConverter/converter/app/converter/src/component/serverHandler.js"],"sourcesContent":["import React from 'react';\n\nconst ServerHandler = ({ selectedOptions, files }) => {\n  const sendDataToServer = async () => {\n    try {\nconsole.log(files)\n      const formData = new FormData();\n      selectedOptions.forEach((option, index) => {\n        formData.append(`option[${index}]`, option);\n      });\n\n      // Append files\n      files.forEach((file, index) => {\n        formData.append(`files`, file);\n      });\n\n      // Make a POST request to the server\n      const response = await fetch('http://gopiko.fr:8780/', {\n        method: 'POST',\n        body: formData,\n      });\n\n      // Handle the response as needed\n      const result = await response.json();\n      console.log('Server response:', result);\n    } catch (error) {\n      console.error('Error sending data to server:', error);\n    }\n  };\n\n  return (\n    <div>\n      <button onClick={sendDataToServer}>Send Data to Server</button>\n    </div>\n  );\n};\n\nexport default ServerHandler;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAM,CAAC,KAAK;EACpD,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACRC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;MACZ,MAAMI,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BN,eAAe,CAACO,OAAO,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;QACzCJ,QAAQ,CAACK,MAAM,CAAE,UAASD,KAAM,GAAE,EAAED,MAAM,CAAC;MAC7C,CAAC,CAAC;;MAEF;MACAP,KAAK,CAACM,OAAO,CAAC,CAACI,IAAI,EAAEF,KAAK,KAAK;QAC7BJ,QAAQ,CAACK,MAAM,CAAE,OAAM,EAAEC,IAAI,CAAC;MAChC,CAAC,CAAC;;MAEF;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,EAAE;QACrDC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEV;MACR,CAAC,CAAC;;MAEF;MACA,MAAMW,MAAM,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MACpCd,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEY,MAAM,CAAC;IACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdf,OAAO,CAACe,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACvD;EACF,CAAC;EAED,oBACEpB,OAAA;IAAAqB,QAAA,eACErB,OAAA;MAAQsB,OAAO,EAAElB,gBAAiB;MAAAiB,QAAA,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACC,EAAA,GAjCI1B,aAAa;AAmCnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}